// <auto-generated />
using System;
using DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    partial class HotelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateOfCheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfCheckOut")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOccupied")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfCheckIn = new DateTime(2022, 5, 8, 16, 14, 36, 267, DateTimeKind.Local).AddTicks(9509),
                            DateOfCheckOut = new DateTime(2022, 7, 8, 16, 14, 36, 267, DateTimeKind.Local).AddTicks(9539),
                            IsBooked = false,
                            IsOccupied = true,
                            RoomId = 1
                        });
                });

            modelBuilder.Entity("DAL.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "322",
                            PricePerDay = 750m,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 2,
                            Number = "315",
                            PricePerDay = 550m,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Number = "317",
                            PricePerDay = 750m,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Number = "215",
                            PricePerDay = 250m,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Number = "208",
                            PricePerDay = 750m,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 6,
                            Number = "522",
                            PricePerDay = 550m,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Number = "666",
                            PricePerDay = 250m,
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("DAL.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Single"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Double"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Triple"
                        });
                });

            modelBuilder.Entity("DAL.Models.Booking", b =>
                {
                    b.HasOne("DAL.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DAL.Models.Room", b =>
                {
                    b.HasOne("DAL.Models.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });
#pragma warning restore 612, 618
        }
    }
}
